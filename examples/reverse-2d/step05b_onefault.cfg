[pylithapp.metadata]
#  y
#  ^
#  |
#   --> x
#
#         ----------
#         |        |
# Ux= 0   |        | Ux= 0
#         |        |
#         |        |
#         ----------
#            Uy=0
#
# Dirichlet boundary conditions
#
# boundary_yneg: Uy(x,-100*km) = 0
# boundary_xneg: Ux(-126*km,y) = 0
# boundary_xpos: Uy(+74*km,y) =  0
base = [pylithapp.cfg]
description = Reverse prescribed slip with zero displacement Dirichlet boundary condition.
authors = [Charles Williams, Brad Aagaard]
keywords = [reverse slip, prescribed slip, uniform refinement]
arguments = [step05b_onefault.cfg]
version = 1.0.0
pylith_version = [>=4.0, <6.0]

features = [
    Static simulation,
    pylith.materials.Elasticity,
    pylith.materials.IsotropicLinearElasticity,
    pylith.faults.FaultCohesiveKin,
    pylith.faults.KinSrcStep,
    spatialdata.spatialdb.UniformDB,
    pylith.topology.RefineUniform
    ]


# ----------------------------------------------------------------------
# output
# ----------------------------------------------------------------------
[pylithapp.problem]
# Set the name of the problem that will be used to construct the
# output filenames. The default directory for output is 'output'.
defaults.name = step05b_onefault

# ----------------------------------------------------------------------
# mesh_generator
# ----------------------------------------------------------------------
[pylithapp.mesh_generator]
refiner = pylith.topology.RefineUniform

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
# Solving the elasticity equation with a fault means the solution must include
# both displacement and Lagrange multiplier subfields.
[pylithapp.problem]
solution = pylith.problems.SolnDispLagrange

# ----------------------------------------------------------------------
# materials
# ----------------------------------------------------------------------
[pylithapp.problem.materials.slab]
db_auxiliary_field.iohandler.filename = mat_elastic.spatialdb

# ----------------------------------------------------------------------
# fault
# ----------------------------------------------------------------------
[pylithapp.problem]
interfaces = [fault]

[pylithapp.problem.interfaces.fault]
# The `label` and `label_value` correspond to the name and tag of the physical group
# for the fault in the Gmsh Python script. The `edge` and `edge_value` correspond to
# the name and tag of the physical group for the fault end in the Gmsh Python script.
label = fault
label_value = 20
edge = fault_end
edge_value = 21
observers.observer.data_fields = [slip, traction_change]

[pylithapp.problem.interfaces.fault.eq_ruptures.rupture]
# We have uniform slip, so we use a `UniformDB` spatial database.
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.description = Fault rupture auxiliary field spatial database
db_auxiliary_field.values = [initiation_time, final_slip_left_lateral, final_slip_opening]
db_auxiliary_field.data = [0.0*s, -2.0*m, 0.0*m]


# End of file

[pylithapp.metadata]
#  y
#  ^
#  |
#   --> x
#
#           Tn = trapezoid function
#         ----------
#         |        |
# Ux= 0   |        | Ux= 0
#         |        |
#         |        |
#         ----------
#            Uy=0
#
# Dirichlet boundary conditions
#
# boundary_yneg: Uy = 0
# boundary_xneg: Ux = 0
# boundary_xpos: Uy =  0
#
# Neumann boundary conditions
#
# Note that the components are given in terms of the
# (outward) normal directions.
#
# boundary_ypos: 
#    x = -125.98 km to -75.98 km:  Tn = 0 MPa
#    x = -75.98 km to -50.98 km:   Tn = linear ramp from 0 to 25 MPa
#    x = -50.98 km to -0.98 km:    Tn = 25 MPa
#    x = -0.98 km to 24.02 km:     Tn = linear ramp from 25  to 0 MPa
#    x = 24.02 to 74.02 km:        Tn = 0 MPa
base = [pylithapp.cfg]
description = Surface load from Neumann boundary condition with Dirichlet zero displacement boundary conditions.
authors = [Charles Williams, Brad Aagaard]
keywords = [Surface load, Neumann BC, Dirichlet BC, uniform refinement]
arguments = [step04b_surfload.cfg]
version = 1.0.0
pylith_version = [>=3.0, <6.0]

features = [
    Static simulation,
    pylith.materials.Elasticity,
    pylith.materials.IsotropicLinearElasticity,
    pylith.bc.NeumannTimeDependent,
    pylith.topology.RefineUniform
    ]


# ----------------------------------------------------------------------
# output
# ----------------------------------------------------------------------
[pylithapp.problem]
# Set the name of the problem that will be used to construct the
# output filenames. The default directory for output is 'output'.
defaults.name = step04b_surfload

# ----------------------------------------------------------------------
# mesh_generator
# ----------------------------------------------------------------------
[pylithapp.mesh_generator]
refiner = pylith.topology.RefineUniform

# ----------------------------------------------------------------------
# materials
# ----------------------------------------------------------------------
[pylithapp.problem.materials.slab]
db_auxiliary_field.iohandler.filename = mat_elastic.spatialdb

# ----------------------------------------------------------------------
# boundary conditions
# ----------------------------------------------------------------------
[pylithapp.problem]
# Redefine array of BC to add bc_ypos.
bc = [bc_xneg, bc_xpos, bc_yneg, bc_ypos]
bc.bc_ypos = pylith.bc.NeumannTimeDependent

# This BC must be fully specified since it is not included in pylithapp.cfg.
[pylithapp.problem.bc.bc_ypos]
label = boundary_ypos
label_value = 13

# The traction varies linearly on the boundary so we use a `SimpleDB` and
# specify `linear` interpolation (`query_type`) and basis order of 1 to represent
# the tractions.
db_auxiliary_field = spatialdata.spatialdb.SimpleDB
db_auxiliary_field.description = Neumann BC +y edge
db_auxiliary_field.iohandler.filename = traction_surfload.spatialdb

db_auxiliary_field.query_type = linear

auxiliary_subfields.initial_amplitude.basis_order = 1

# End of file

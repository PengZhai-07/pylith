[pylithapp.metadata]
#  y
#  ^
#  |
#   --> x
#
#
#             -----------
#             |    |    |
# Ux, Uy= 0   |    |    | Ux, Uy= 0
#             |    |    |
#             |    |    |
#             -----------
#
# Dirichlet boundary conditions
#
# boundary_xneg: Ux = Uy = 0
# boundary_xpos: Ux = Uy = 0
#
# Fault has uniform slip of 2 m.
base = [pylithapp.cfg]
description = Coseismic prescribed slip with zero displacement Dirichlet boundary conditions.
authors = [Brad Aagaard]
keywords = [prescribed slip]
arguments = [step01a_slip.cfg]
version = 1.0.0
pylith_version = [>=4.0, <6.0]

features = [
    Static simulation
    ]


# ----------------------------------------------------------------------
# output
# ----------------------------------------------------------------------
[pylithapp.problem]
# Set the name of the problem that will be used to construct the
# output filenames. The default directory for output is 'output'.
defaults.name = step01a_slip_ts

# ----------------------------------------------------------------------
# problem
# ----------------------------------------------------------------------
[pylithapp.timedependent]
# For time-dependent problems, we specify start and end times and an initial
# time step. With an initial time step of 5 years, we use a start time of
# -5 years so that the first solution occurs at 0 years.
initial_dt = 5.0*year
start_time = -5.0*year
end_time = 150.0*year

# # Set the earthquake origin time to t=150 yr
# eq_ruptures.earthquake = pylith.faults.KinSrcStep
# eq_ruptures.earthquake.origin_time = 0.0*year

# Use a relaxation time of 20 years to nondimensionalize time.
normalizer.relaxation_time = 20.0*year

# ----------------------------------------------------------------------
# fault
# ----------------------------------------------------------------------
[pylithapp.problem.interfaces.fault.eq_ruptures.rupture]
db_auxiliary_field = spatialdata.spatialdb.UniformDB
db_auxiliary_field.description = Fault rupture auxiliary field spatial database
db_auxiliary_field.values = [initiation_time, final_slip_left_lateral, final_slip_opening]
db_auxiliary_field.data = [0.0*s, -2.0*m, 0.0*m]


# materials
# ----------------------------------------------------------------------
# Create an array of three materials, matching the number of physical groups
# of materials we created in the Gmsh Python script.
[pylithapp.problem]
materials = [elastic_xneg, elastic_xpos]

# ----------------------------------------------------------------------
# materials
# ----------------------------------------------------------------------
# We switch to a linear, isotropic Maxwell viscoelastic bulk rheology for
# the slab.
[pylithapp.problem.materials]
elastic_xneg.bulk_rheology = pylith.materials.IsotropicLinearMaxwell
elastic_xpos.bulk_rheology = pylith.materials.IsotropicLinearMaxwell

[pylithapp.problem.materials.elastic_xneg]
db_auxiliary_field = spatialdata.spatialdb.SimpleDB
db_auxiliary_field.description = Maxwell viscoelastic properties

db_auxiliary_field.iohandler.filename = mat_maxwell.spatialdb

bulk_rheology.auxiliary_subfields.maxwell_time.basis_order = 0


[pylithapp.problem.materials.elastic_xpos]
db_auxiliary_field = spatialdata.spatialdb.SimpleDB
db_auxiliary_field.description = Maxwell viscoelastic properties

db_auxiliary_field.iohandler.filename = mat_maxwell.spatialdb

bulk_rheology.auxiliary_subfields.maxwell_time.basis_order = 0

[pylithapp.petsc]

ts_exact_final_time = matchstep

dm_reorder_section = True
dm_reorder_section_type = cohesive

pc_type = gamg
mg_fine_pc_type = vpbjacobi

## new petsc options
snes_atol = 1.0e-9
snes_converged_reason = true
snes_error_if_not_converged = true
snes_monitor = true
snes_rtol = 1.0e-12
ts_error_if_step_fails = true
ts_monitor = true
ts_type = beuler
ts_adapt_type = basic

# have we indicated the timestep length < output timestep?


# End of file
